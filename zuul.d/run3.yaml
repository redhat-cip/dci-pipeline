---

- hosts: testrunner
  vars:
    dcidevenv_path_query: "[?name=='dci-dev-env'].src_dir"
    dcidevenv_path: "{{ (zuul.projects.values() | list | json_query(dcidevenv_path_query))[0] }}"
    dciclient_path_query: "[?name=='python-dciclient'].src_dir"
    dciclient_path: "{{ ansible_env.HOME }}/{{ (zuul.projects.values() | list | json_query(dciclient_path_query))[0] }}"
  tasks:

    - name: Build and launch the control server container images from dci-dev-env
      shell: "set -ex; ln -s ../* . && podman-compose build db api && podman-compose up -d db api"
      args:
        chdir: '{{ dcidevenv_path }}'

    - name: Get podman-compose status
      command: podman-compose ps
      args:
        chdir: '{{ dcidevenv_path }}'

    - name: Provision data
      command: ./dev-setup/dci-telcoprovisioning
      args:
        chdir: "{{ zuul.project.src_dir }}"

    - name: Force to use dciclient from the local copy
      ansible.builtin.replace:
        path: "{{ zuul.project.src_dir }}/requirements.txt"
        regexp: '^dciclient$'
        replace: '-e {{ dciclient_path }}'

    - name: Run the example pipeline in Python 3
      command: tox
      args:
        chdir: "{{ zuul.project.src_dir }}"

...
