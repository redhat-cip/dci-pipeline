#!/bin/bash
#
# Copyright (C) 2023-2024 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

set -x

TOPDIR=$(cd "$(dirname "$0")" || exit; pwd)

if [[ $0 =~ .*-podman$ ]]; then
    SUFFIX=-podman
else
    SUFFIX=
fi

if [ -r "$TOPDIR/common$SUFFIX" ]; then
    BASEDIR="$TOPDIR"
else
    BASEDIR=/usr/share/dci-pipeline
fi

. "$BASEDIR/common$SUFFIX"

REPO=${1/*\/}
shift

if [[ -z "${GCHAT_URL}" ]]; then
    exit 0
fi

# Only send alerts for monitored repos
if [[ "${MONITORED_REPOS[*]} " =~ " ${REPO} " ]]; then
    # Create a thread key to generate a URL link and send it to the thread
    thread_key=$(tr -dc a-zA-Z0-9 </dev/urandom |
        tr -d '\\/' |
        head -c 11
    )
    req=$( curl \
    --silent \
    --header "Content-type: application/json; charset=UTF-8" \
    --data '{"text": "'"$*"'"}' \
    "${GCHAT_URL}&threadKey=${thread_key}&messageReplyOption=REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD"
    )
    space=$(jq -r .space.name <<< "${req}")
    thread=$(jq -r .thread.name <<< "${req}")
    if [[ "${thread}" == 'null' ]]; then
        echo "Failed to send alert to Google Chat"
        exit 1
    fi

    thread_url='https://chat.google.com/room/'"${space/*\/}"'/'"${thread/*\/}"
    curl \
    --silent \
    --header "Content-type: application/json; charset=UTF-8" \
    --data '{"text": "ðŸ”— '"${thread_url}"'", }' \
    "${GCHAT_URL}&threadKey=${thread_key}&messageReplyOption=REPLY_MESSAGE_FALLBACK_TO_NEW_THREAD"
fi

# alert ends here
